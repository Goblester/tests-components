{"version":3,"sources":["p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h12/HW12.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h5/HW5.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","assets/Infinity-1s-200px.svg","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h5/pages/Junior.tsx","common/commonFunctions.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Header","className","styles","container","navLinks","navLink","to","point","Message","props","s","msgLeft","msgLeftSub","src","avatar","alt","msgDesc","name","message","time","messageData","HW1","Affair","affair","deleteAffairCallback","priority","onClick","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","aff","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","hasError","undefined","inputClass","value","onChange","disabled","onlyLetters","test","required","length","GreetingContainer","users","addUserCallback","setName","setError","e","currentTarget","max","min","newError","validators","reduce","validator","combineValidators","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","hw4","column","form__field","placeholder","buttonExample","buttonDisabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","superEditableInput","superEditableSpan","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","it","ind","SuperRadio","onChangeCallback","o","i","arr","HW7","homeWorkReducer","action","direction","payload","sort","b","age","p","sortAC","initialPeople","HW8","useReducer","people","dispatch","finalPeople","React","memo","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","stop","clearInterval","seconds","getSeconds","minutes","getMinutes","hours","getHours","stringTime","stringDate","getDay","getMonth","getFullYear","onMouseEnter","onMouseLeave","id","window","setInterval","HW9","LOADING_ACTIONS_TYPE","initState","isLoading","loadingAC","CHANGE_LOADING","HW10","useSelector","loading","useDispatch","loader","setTimeout","console","log","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","step","handleChange","newValue","onInputChange","position","dataset","valueAsNumber","Number","maxValue","minValue","doubleRange","rangeSlider","data-position","HW11","ACTION_TYPES","value1","setValue1","value2","setValue2","val1","val2","Junior","handlers","CHANGE_THEME","themeReducer","initialState","handler","reducerFactory","theme","themes","HW12","newTheme","changeTheme","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f48e85b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"HW4_column__3JtlY\",\"hw4\":\"HW4_hw4__2YicU\",\"form__field\":\"HW4_form__field__3BoSp\",\"buttonExample\":\"HW4_buttonExample__2I-dC\",\"buttonDisabled\":\"HW4_buttonDisabled__SoUug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"msgLeft\":\"Message_msgLeft__2L5re\",\"msgDesc\":\"Message_msgDesc__3WGSS\",\"name\":\"Message_name__DBIyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__NC_Oj\",\"navLinks\":\"Header_navLinks__1T2Gt\",\"point\":\"Header_point__2rDfA\",\"navLink\":\"Header_navLink__2eS7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__3DrdR\",\"dark-text\":\"HW12_dark-text__ELqfq\",\"red\":\"HW12_red__2Jd_0\",\"red-text\":\"HW12_red-text__3ZOzz\",\"some\":\"HW12_some__1WH3c\",\"some-text\":\"HW12_some-text__G5lft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__wqSa7\",\"error\":\"SuperInputText_error__23Uq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__FMGMt\",\"red\":\"SuperButton_red__i4AT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3tLbu\",\"spanClassName\":\"SuperCheckbox_spanClassName__mGJX0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superEditableSpan\":\"SuperEditableSpan_superEditableSpan__33Vuk\",\"superEditableInput\":\"SuperEditableSpan_superEditableInput__28sD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SuperDoubleRange_container__2E4Zf\",\"doubleRange\":\"SuperDoubleRange_doubleRange__1XENh\",\"rangeSlider\":\"SuperDoubleRange_rangeSlider__2qg0D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Dyc1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1W2i0\",\"error\":\"Greeting_error___ETYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__3jmi2\",\"doubleRangeValue\":\"SuperRange_doubleRangeValue__2pUyb\",\"doubleRangeLine\":\"SuperRange_doubleRangeLine__2R_mq\",\"runner\":\"SuperRange_runner__2LFw7\",\"doubleRange\":\"SuperRange_doubleRange__1Arre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HW5_container__v36B9\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport styles from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.navLinks}>\r\n                <NavLink className={styles.navLink} to={'/pre-junior'}>pre-junior</NavLink>\r\n                <NavLink className={styles.navLink} to={'/junior'}>junior</NavLink>\r\n                <NavLink className={styles.navLink} to={'/junior-plus'}>junior+</NavLink>\r\n                <div className={styles.point}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport \"./Message.module.css\";\r\nimport s from \"./Message.module.css\";\r\n\r\ntype MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <li className={s.msgLeft}>\r\n            <div className={s.msgLeftSub}>\r\n                <img src={props.avatar} alt=\"\"/>\r\n\r\n\r\n                <div className={s.msgDesc}>\r\n                    <div className={s.name}>{props.name}</div>\r\n                    {props.message}\r\n                    <small>{props.time}</small>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\nimport \"./Message.module.css\";\r\nimport s from \"./Message.module.css\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <ul>\r\n                <Message\r\n                    avatar={messageData.avatar}\r\n                    name={messageData.name}\r\n                    message={messageData.message}\r\n                    time={messageData.time}\r\n                />\r\n\r\n\r\n            </ul>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (id:number)=>void\r\n}\r\n\r\nfunction Affair({affair, deleteAffairCallback}: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        deleteAffairCallback(affair._id);\r\n    }// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {affair.name} |\r\n            <span>{affair.priority} |</span>\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter:FilterType)=>void\r\n    deleteAffairCallback: (_id:number)=>void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')}\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low';\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    switch (filter) {\r\n        case 'high':\r\n            return affairs.filter(aff => aff.priority === 'high')\r\n        case 'middle':\r\n            return affairs.filter(aff => aff.priority === 'middle')\r\n        case 'low':\r\n            return affairs.filter(aff => aff.priority === 'low')\r\n        default:\r\n            return affairs;\r\n    }\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(aff => aff._id != _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>)=>void // need to fix any\r\n    addUser: ()=>void // need to fix any\r\n    error: string | undefined // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const hasError = error !== undefined;\r\n\r\n    const inputClass = hasError ? s.error : ''\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}\r\n                    disabled={hasError}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void// need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\n\r\ntype ValidatorType = (name: string) => undefined | string\r\n\r\nconst onlyLetters = (name: string) => {\r\n    if (!/^[A-Za-z]+$/.test(name)) {\r\n        return 'name should contain only latin letters';\r\n    }\r\n}\r\n\r\nconst minLength = (min: number) => (name: string) => {\r\n    if (name.length < min) {\r\n        return `minimum length is ${min}`;\r\n    }\r\n\r\n}\r\n\r\nconst maxLength = (max: number) => (name: string) => {\r\n    if (name.length > max) {\r\n        return `maximum length is ${max}`;\r\n    }\r\n}\r\n\r\nconst required = (name: string) => {\r\n    if (name.length === 0) {\r\n        return 'Field is required';\r\n    }\r\n\r\n}\r\n\r\n\r\nconst combineValidators = (...validators: Array<ValidatorType>) => (name: string) => {\r\n    return validators.reduce((error: undefined | string, validator) => {\r\n        return error || validator(name);\r\n    }, undefined);\r\n}\r\n\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string | undefined>(undefined) // need to fix any\r\n\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n        const newError = combineValidators(onlyLetters, minLength(6), maxLength(15), required)(e.currentTarget.value);\r\n        setError(newError);\r\n    }\r\n\r\n    const setNewError = () => {\r\n\r\n    }\r\n\r\n    const addUser = () => {\r\n        addUserCallback(name);\r\n        alert(`Hello  ${name}!`) // need to fix\r\n        setName('');\r\n    }\r\n\r\n    const totalUsers = users.length;// need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]);\r\n    const addUserCallback = (name: string) => {\r\n        const newUser = {\r\n         _id: v1(),\r\n         name\r\n        }\r\n        setUsers([...users, newUser])\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter\r\n        && e.key === 'Enter'\r\n        && onEnter()\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error?s.errorInput:''} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'Field is required'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={s.hw4}>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    className={s.form__field}\r\n                    placeholder={'name'}\r\n                    name = {'name'}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.form__field}\r\n                    placeholder={'login'}\r\n                    // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton className={s.buttonExample}>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton className={s.buttonExample}\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled className={s.buttonDisabled}>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    debugger;\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n         setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${className}`\r\ndebugger;\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\nimport styles from './common/c4-SuperEditableSpan/SuperEditableSpan.module.css';\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        const state = restoreState<string>('editable-span-value', value);\r\n        setValue(state);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    className={styles.superEditableInput}\r\n                    spanProps={{children: value ? undefined : 'enter text...',   className: styles.superEditableSpan}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6';\r\nimport HW7 from '../../h7/HW7';\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] =options?options.map((it,ind)=><option key={ind}>{it}</option>):[];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange&&onChange(e);\r\n\r\n        onChangeOption&&onChangeOption(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange&&onChange(e);\r\n\r\n        onChangeOption&&onChangeOption(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + \"-\" + i} className={className}>\r\n            <input\r\n                type={\"radio\"}\r\n                name={name}\r\n                checked = {o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {useState} from \"react\";\r\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = [\"x\", \"y\", \"z\"];\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={\"radio\"}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW7;\r\n","export type PeopleType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\ntype ActionsType = SortAT | CheckAT\r\n\r\ntype SortAT = {\r\n    type: 'sort'\r\n    payload: 'up' | 'down'\r\n}\r\n\r\ntype CheckAT = {\r\n    type: 'check'\r\n    payload: number\r\n}\r\n\r\nexport const homeWorkReducer = (state: Array<PeopleType>, action: ActionsType): Array<PeopleType> => {\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            const direction = action.payload === 'up' ? 1 : -1;\r\n            return [...state].sort((a, b) => direction * (a.age - b.age))\r\n        }\r\n        case 'check': {\r\n            return state.filter(p => p.age >= 18);\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const sortAC = (payload: 'up' | 'down'): SortAT => ({\r\n    type: 'sort' as const,\r\n    payload\r\n});\r\n\r\nexport const checkAC = (payload: number): CheckAT => ({\r\n    type: 'check' as const,\r\n    payload\r\n})\r\n","import React, {useReducer} from 'react';\r\nimport {checkAC, homeWorkReducer, PeopleType, sortAC} from './bll/homeWorkReducer';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\nconst initialPeople: Array<PeopleType> = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, dispatch] = useReducer(homeWorkReducer, initialPeople);\r\n    const finalPeople = people.map(p => (\r\n        <div key={p._id}>\r\n            {p.name} --- {p.age}\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => dispatch(sortAC('up'));\r\n    const sortDown = () => dispatch(sortAC('down'));\r\n    const checkEighteen = ()=> dispatch(checkAC(18));\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            {finalPeople}\r\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n            <div><SuperButton onClick={checkEighteen}>check 18</SuperButton></div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(HW8);\r\n","import React, {useState} from \"react\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0);\r\n    const [date, setDate] = useState<Date>(new Date());\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId);\r\n    }\r\n    const start = () => {\r\n        stop();\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n        setTimerId(id);\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true);\r\n    };\r\n    const onMouseLeave = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    const seconds = date.getSeconds()<10?'0'+date.getSeconds():date.getSeconds();\r\n    const minutes = date.getMinutes()<10?'0'+date.getMinutes():date.getMinutes();\r\n    const hours = date.getHours()<10?'0'+date.getHours():date.getHours();\r\n\r\n    const stringTime = `${hours}:${minutes}:${seconds}` // fix with date\r\n    const stringDate =`${date.getDay()}:${date.getMonth()}:${date.getFullYear()}`; // fix with date\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div>\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW9;\r\n","export enum LOADING_ACTIONS_TYPE {\r\n    CHANGE_LOADING = 'LOADING/CHANGE_LOADING'\r\n}\r\n\r\n\r\ntype LoadingReducerStateType = {\r\n    isLoading: boolean\r\n}\r\n\r\nconst initState: LoadingReducerStateType = {\r\n    isLoading: false\r\n};\r\n\r\nexport type LoadingActionsType = LoadingAT;\r\n\r\nexport const loadingReducer = (state = initState, action: LoadingActionsType): LoadingReducerStateType => {\r\n    switch (action.type) {\r\n        case 'LOADING/CHANGE_LOADING': {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype LoadingAT = {\r\n    type: LOADING_ACTIONS_TYPE.CHANGE_LOADING,\r\n    payload: {\r\n        isLoading: boolean\r\n    }\r\n}\r\n\r\nexport const loadingAC = (isLoading: boolean): LoadingAT => ({\r\n    type: LOADING_ACTIONS_TYPE.CHANGE_LOADING,\r\n    payload: {\r\n        isLoading\r\n    }\r\n});","export default __webpack_public_path__ + \"static/media/Infinity-1s-200px.90c61ca2.svg\";","import React from 'react';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from './bll/store';\r\nimport {Dispatch} from 'redux';\r\nimport {loadingAC, LoadingActionsType} from './bll/loadingReducer';\r\nimport loader from './../../assets/Infinity-1s-200px.svg';\r\n\r\nfunction HW10() {\r\n    const isLoading = useSelector<AppStateType>((state: AppStateType) => state.loading.isLoading);\r\n    const dispatch = useDispatch<Dispatch<LoadingActionsType>>();\r\n    debugger;\r\n    const setLoading = () => {\r\n        dispatch(loadingAC(true));\r\n        setTimeout(() => {\r\n            dispatch(loadingAC(false))\r\n        }, 3000)\r\n        console.log('loading...');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {isLoading\r\n                ? (\r\n                    <div><img src={loader}/></div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW10;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                value={restProps.value}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React, {ChangeEvent} from 'react';\r\nimport styles from './SuperDoubleRange.module.css';\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: number[]) => void\r\n    value?: number[]\r\n    min?: number,\r\n    max?: number,\r\n    step?: number,\r\n    disabled?: boolean\r\n}\r\n\r\n\r\nexport const SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value,\r\n        min, max, step, disabled\r\n    }\r\n) => {\r\n\r\n    const handleChange = (e: ChangeEvent<{}>, newValue: number | number[]) => {\r\n        if (typeof newValue === 'object') {\r\n            onChangeRange && onChangeRange(newValue)\r\n        }\r\n    }\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const position = e.currentTarget.dataset.position;\r\n\r\n        if (position) {\r\n            if (value) {\r\n                if (position === 'left') {\r\n                    if (e.currentTarget.valueAsNumber <= value[1]) {\r\n                        handleChange(e, [Number(e.currentTarget.value), value[1]]);\r\n                    }\r\n                } else {\r\n                    if (e.currentTarget.valueAsNumber >= value[0]) {\r\n                        handleChange(e, [value[0], Number(e.currentTarget.value)]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const maxValue = max ? max : 100;\r\n    const minValue = min ? min : 0;\r\n\r\n\r\n    return (\r\n        <div className={styles.doubleRange}>\r\n            <span>{minValue}</span>\r\n            <div className={styles.rangeSlider}>\r\n                <input type={'range'}\r\n                       data-position={'left'}\r\n                       value={value ? value[0] : 0}\r\n                       min={minValue}\r\n                       max={maxValue}\r\n                       onChange={onInputChange}\r\n                       step={step}\r\n                       disabled={disabled}\r\n                />\r\n                <input type={'range'}\r\n                       data-position={'right'}\r\n                       value={value ? value[1] : 100}\r\n                       min={minValue}\r\n                       max={maxValue}\r\n                       onChange={onInputChange}\r\n                       step={step}\r\n                       disabled={disabled}\r\n                />\r\n\r\n            </div>\r\n            <span>{maxValue}</span>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport SuperRange from './common/c7-SuperRange/SuperRange';\r\nimport {SuperDoubleRange} from './common/c8-SuperDoubleRange/SuperDoubleRange';\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(0);\r\n    const [value2, setValue2] = useState(100);\r\n    const onDoubleRangeChange = ([val1, val2]: Array<number>) => {\r\n        setValue1(val1);\r\n        setValue2(val2);\r\n    }\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperRange\r\n                    value={value1}\r\n                    onChangeRange={setValue1}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <SuperDoubleRange\r\n                    value={[value1, value2]}\r\n                    onChangeRange={onDoubleRangeChange}\r\n                    min={1000}\r\n                    max={100000}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW11;\r\n","import {changeState, reducerFactory, ReducerType} from '../../../common/commonFunctions';\r\n\r\nenum ACTION_TYPES {\r\n    CHANGE_THEME = 'THEME_REDUCER/CHANGE_THEME'\r\n}\r\n\r\nexport type ThemeType = 'dark' | 'some' | 'red'\r\n\r\nexport type ChangeThemeAT = {\r\n    type: ACTION_TYPES.CHANGE_THEME,\r\n    payload: {\r\n        theme: ThemeType\r\n    }\r\n}\r\n\r\ntype ThemeActionTypes = ChangeThemeAT\r\n\r\nexport type ThemeStateType = {\r\n    theme: ThemeType\r\n}\r\n\r\nconst initialState:ThemeStateType = {\r\n    theme: 'red'\r\n}\r\n\r\n\r\n\r\ntype HandlersType = {\r\n    [key: string]: (state: any, action: any) => any\r\n}\r\n\r\nconst handlers: HandlersType = {}\r\n\r\nhandlers[ACTION_TYPES.CHANGE_THEME] = changeState();\r\n\r\n\r\n\r\nexport const themeReducer= reducerFactory(initialState, handlers);\r\n\r\nexport const changeTheme = (theme: ThemeType): ChangeThemeAT => ({\r\n    type: ACTION_TYPES.CHANGE_THEME,\r\n    payload: {\r\n        theme\r\n    }\r\n})","import React from 'react';\r\nimport HW7 from '../../h7/HW7';\r\nimport HW8 from '../../h8/HW8';\r\nimport HW9 from '../../h9/HW9';\r\nimport HW10 from '../../h10/HW10';\r\nimport HW11 from '../../h11/HW11';\r\n\r\n\r\nexport const Junior = React.memo(function () {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n        </div>\r\n    )\r\n})","export const changeState =()=> (state: any, action: any) => ({\r\n    ...state,\r\n    ...action.payload\r\n})\r\n\r\nexport type ReducerType<T,R> = (state:T,action:R)=>T\r\n\r\n\r\nexport const reducerFactory = (initialState: any, handlers: any) => (state = initialState, action: any) => {\r\n    const handler = handlers[action.type];\r\n    if (handler) {\r\n        return handler(state, action)\r\n    }\r\n    return state\r\n}\r\n","import React from \"react\";\r\nimport s from \"./HW12.module.css\";\r\nimport SuperRadio from '../h7/common/c6-SuperRadio/SuperRadio';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {changeTheme, ThemeStateType, ThemeType} from './bll/themeReducer';\r\nimport {Dispatch} from 'redux';\r\nimport {AppStateType} from '../h10/bll/store';\r\n\r\nconst themes = ['dark', 'red', 'some'];\r\n\r\nfunction HW12() {\r\n    const theme = useSelector<AppStateType, ThemeType>((state)=>state.theme.theme);\r\n    debugger;\r\n    const dispatch = useDispatch<Dispatch>();\r\n    const  onChange = (newTheme: ThemeType)=>{\r\n        dispatch(changeTheme(newTheme));\r\n    }\r\n\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={s[theme + '-text']}>\r\n                homeworks 12\r\n            </span>\r\n\r\n\r\n            <SuperRadio options={themes}\r\n                        onChangeOption={onChange}\r\n                        value={theme}\r\n                        className={s[theme + '-text']}\r\n                        />\r\n\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW12;\r\n","import React from 'react';\r\nimport HW12 from '../../h12/HW12';\r\n\r\n\r\nexport const JuniorPlus = React.memo(function (){\r\n    return (\r\n        <div>\r\n            <HW12/>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport {HashRouter, Redirect, Route, Switch} from 'react-router-dom'\r\nimport PreJunior from './pages/PreJunior';\r\nimport Error404 from './pages/Error404';\r\nimport {Junior} from './pages/Junior';\r\nimport {JuniorPlus} from './pages/JuniorPlus';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                {/*Switch выбирает первый подходящий роут*/}\r\n                <Switch>\r\n\r\n                    в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\r\n                    exact нужен чтоб указать полное совподение (что после '/' ничего не будет)\r\n                    <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n                    <Route path={'/'} exact render={() => <Redirect to={PATH.JUNIOR}/>}/>\r\n                    <Route path={'/'} exact render={() => <Redirect to={PATH.JUNIOR_PLUS}/>}/>\r\n\r\n                    <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                    <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                    <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                    // add routes\r\n\r\n                    у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\r\n                    <Route render={() => <Error404/>}/>\r\n\r\n                </Switch>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from 'react-router-dom';\r\nimport styles from './HW5.module.css';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div className={styles.container}>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n                <Header/>\r\n\r\n                <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import {loadingReducer} from \"./loadingReducer\";\r\nimport {combineReducers, createStore} from 'redux';\r\nimport {themeReducer} from '../../h12/bll/themeReducer';\r\n\r\n const reducers = combineReducers({\r\n     loading: loadingReducer,\r\n     theme: themeReducer\r\n });\r\n\r\n const store = createStore(reducers);\r\n\r\n export default store;\r\n\r\n export type AppStateType = ReturnType<typeof reducers>\r\n\r\n // @ts-ignore\r\n window.store = store;\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {Provider} from 'react-redux';\r\nimport store from './p2-homeworks/h10/bll/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}